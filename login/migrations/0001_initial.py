# Generated by Django 4.0.3 on 2022-04-18 08:41

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Animation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ani_name', models.CharField(max_length=255)),
                ('ani_cover', models.CharField(max_length=255)),
                ('synopsis', models.CharField(blank=True, max_length=255, null=True)),
                ('aver_score', models.CharField(blank=True, max_length=255, null=True)),
                ('aera', models.CharField(blank=True, max_length=255, null=True)),
                ('tag', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('ani_cv', models.CharField(blank=True, max_length=255, null=True)),
                ('ani_director', models.CharField(blank=True, max_length=255, null=True)),
                ('language', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'animation',
            },
        ),
        migrations.CreateModel(
            name='AnimationTemp',
            fields=[
                ('field_id', models.AutoField(db_column=' id', primary_key=True, serialize=False)),
                ('ani_name', models.CharField(blank=True, max_length=255, null=True)),
                ('ani_cover', models.CharField(blank=True, max_length=255, null=True)),
                ('ani_cv', models.CharField(blank=True, max_length=255, null=True)),
                ('ani_area', models.CharField(blank=True, max_length=255, null=True)),
                ('ani_director', models.CharField(blank=True, max_length=255, null=True)),
                ('ani_language', models.CharField(blank=True, max_length=255, null=True)),
                ('ani_years', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'animation_temp',
            },
        ),
        migrations.CreateModel(
            name='Appraise',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uid', models.IntegerField(blank=True, null=True)),
                ('ani_id', models.IntegerField(blank=True, null=True)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('score', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'appraise',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('article_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uid', models.IntegerField(blank=True, null=True)),
                ('content', models.CharField(blank=True, max_length=255, null=True)),
                ('comment_count', models.IntegerField(blank=True, null=True)),
                ('like_count', models.IntegerField(blank=True, null=True)),
                ('dislike_count', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('update_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'article',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('commentable_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('content', models.CharField(blank=True, max_length=255, null=True)),
                ('like_count', models.IntegerField(blank=True, null=True)),
                ('dislike_count', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('reply_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'comment',
            },
        ),
        migrations.CreateModel(
            name='Hypertext',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ani_id', models.IntegerField(blank=True, null=True)),
                ('platform', models.CharField(blank=True, max_length=255, null=True)),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'hypertext',
            },
        ),
        migrations.CreateModel(
            name='Likepeople',
            fields=[
                ('uid', models.IntegerField(primary_key=True, serialize=False)),
                ('followable_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'likepeople',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('message_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uid', models.IntegerField(blank=True, null=True)),
                ('is_readed', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'message',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('article_count', models.IntegerField(blank=True, null=True)),
                ('follower_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('uid', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('avater', models.CharField(blank=True, max_length=255, null=True)),
                ('cover', models.CharField(blank=True, max_length=255, null=True)),
                ('las_login_ip', models.CharField(blank=True, max_length=255, null=True)),
                ('follower_count', models.IntegerField(blank=True, null=True)),
                ('followee_count', models.IntegerField(blank=True, null=True)),
                ('following_articles', models.IntegerField(blank=True, null=True)),
                ('following_tags', models.IntegerField(blank=True, null=True)),
                ('article_count', models.IntegerField(blank=True, null=True)),
                ('comment_count', models.CharField(blank=True, max_length=255, null=True)),
                ('message_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user',
            },
        ),
    ]
